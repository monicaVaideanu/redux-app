{"ast":null,"code":"import { ADD_NOTE } from \"../actions/actions\";\nconst initialState = {\n  notes: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [...state.notes, {\n          title: action.payload.title,\n          description: action.payload.description\n        }]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["ADD_NOTE","initialState","notes","rootReducer","state","action","type","title","payload","description"],"sources":["/Users/monicavaideanu/Desktop/redux-app/src/redux/reducers/reducers.js"],"sourcesContent":["import { ADD_NOTE } from \"../actions/actions\";\n\nconst initialState = {\n  notes: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [\n          ...state.notes,\n          {\n            title: action.payload.title,\n            description: action.payload.description,\n          },\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,QAAL;MACE,OAAO;QACLE,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;UACEK,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADxB;UAEEE,WAAW,EAAEJ,MAAM,CAACG,OAAP,CAAeC;QAF9B,CAFK;MADF,CAAP;;IAUF;MACE,OAAOL,KAAP;EAbJ;AAeD,CAhBD;;AAkBA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}