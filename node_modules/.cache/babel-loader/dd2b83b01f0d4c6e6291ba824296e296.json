{"ast":null,"code":"import { ADD_NOTE } from \"../actions/actions\";\nimport { DELETE_NOTE, UPDATE_NOTE } from \"../actions/actions\";\nconst initialState = {\n  notes: []\n};\n\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [...state.notes, {\n          title: action.payload.title,\n          description: action.payload.description,\n          id: action.payload.id\n        }]\n      };\n\n    case DELETE_NOTE:\n      console.log('Deleting note with ID from reducere :', action.payload.id);\n      return { ...state.notes,\n        notes: state.notes.filter(note => note.id !== action.payload)\n      };\n\n    case UPDATE_NOTE:\n      {\n        return { ...state.notes,\n          notes: state.notes.map(note => note.id === action.payload.id ? { ...note,\n            description: action.payload.description,\n            title: action.payload.title\n          } : note)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["ADD_NOTE","DELETE_NOTE","UPDATE_NOTE","initialState","notes","rootReducer","state","action","type","title","payload","description","id","console","log","filter","note","map"],"sources":["/Users/monicavaideanu/Desktop/redux-app/src/redux/reducers/reducers.js"],"sourcesContent":["import { ADD_NOTE } from \"../actions/actions\";\nimport { DELETE_NOTE, UPDATE_NOTE } from \"../actions/actions\";\n\n\nconst initialState = {\n  notes: [],\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_NOTE:\n      return {\n        notes: [\n          ...state.notes,\n          {\n            title: action.payload.title,\n            description: action.payload.description,\n            id: action.payload.id\n          },\n        ],\n      };\n      case DELETE_NOTE:\n        console.log('Deleting note with ID from reducere :', action.payload.id);\n        return {\n          ...state.notes,\n          notes: state.notes.filter(note => note.id !== action.payload)\n        };\n        case UPDATE_NOTE:{\n          return {\n              ...state.notes,\n              notes: state.notes.map(note =>\n                note.id === action.payload.id ? { ...note, description: action.payload.description, title: action.payload.title } : note\n              ),\n          }\n\n        }\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,oBAAzC;AAGA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AADY,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKR,QAAL;MACE,OAAO;QACLI,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KADJ,EAEL;UACEK,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADxB;UAEEE,WAAW,EAAEJ,MAAM,CAACG,OAAP,CAAeC,WAF9B;UAGEC,EAAE,EAAEL,MAAM,CAACG,OAAP,CAAeE;QAHrB,CAFK;MADF,CAAP;;IAUA,KAAKX,WAAL;MACEY,OAAO,CAACC,GAAR,CAAY,uCAAZ,EAAqDP,MAAM,CAACG,OAAP,CAAeE,EAApE;MACA,OAAO,EACL,GAAGN,KAAK,CAACF,KADJ;QAELA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACG,OAA9C;MAFF,CAAP;;IAIA,KAAKR,WAAL;MAAiB;QACf,OAAO,EACH,GAAGI,KAAK,CAACF,KADN;UAEHA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYa,GAAZ,CAAgBD,IAAI,IACzBA,IAAI,CAACJ,EAAL,KAAYL,MAAM,CAACG,OAAP,CAAeE,EAA3B,GAAgC,EAAE,GAAGI,IAAL;YAAWL,WAAW,EAAEJ,MAAM,CAACG,OAAP,CAAeC,WAAvC;YAAoDF,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD;UAA1E,CAAhC,GAAoHO,IAD/G;QAFJ,CAAP;MAOD;;IAEL;MACE,OAAOV,KAAP;EA7BJ;AA+BD,CAhCD;;AAkCA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}